import hr.dtakac.prognoza.shared.entity.Angle;
import hr.dtakac.prognoza.shared.entity.Description;
import hr.dtakac.prognoza.shared.entity.Length;
import hr.dtakac.prognoza.shared.entity.Mood;
import hr.dtakac.prognoza.shared.entity.Percentage;
import hr.dtakac.prognoza.shared.entity.Pressure;
import hr.dtakac.prognoza.shared.entity.Speed;
import hr.dtakac.prognoza.shared.entity.Temperature;

CREATE TABLE IF NOT EXISTS Forecast (
    `startEpochMillis` INTEGER NOT NULL,
    `endEpochMillis` INTEGER NOT NULL,
    `latitude` REAL NOT NULL,
    `longitude` REAL NOT NULL,
    `temperature` REAL AS Temperature NOT NULL,
    `description` TEXT AS Description NOT NULL,
    `mood` TEXT AS Mood NOT NULL,
    `precipitation` REAL AS Length NOT NULL,
    `windSpeed` REAL AS Speed NOT NULL,
    `windFromDirection` REAL AS Angle NOT NULL,
    `humidity` REAL AS Percentage NOT NULL,
    `airPressureAtSeaLevel` REAL AS Pressure NOT NULL,
    PRIMARY KEY(`startEpochMillis`, `endEpochMillis`, `latitude`, `longitude`)
);

insert:
INSERT OR REPLACE INTO Forecast VALUES ?;

delete:
DELETE FROM Forecast
WHERE abs(latitude - :latitude) < 0.00001 AND abs(longitude - :longitude) < 0.00001;

get:
SELECT * FROM Forecast
WHERE abs(latitude - :latitude) < 0.00001 AND abs(longitude - :longitude) < 0.00001
AND DATETIME(startEpochMillis/1000, 'unixepoch') >= DATETIME('now', '-1 hour')
ORDER BY DATETIME(startEpochMillis/1000, 'unixepoch') ASC;